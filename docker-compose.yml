version: "3.5"

services:
  api01: &api # image: ruhtar/rinha-de-backend2
    image: ${DOCKER_REGISTRY-}rinha-api
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api01
    environment:
      - DB_HOSTNAME=db
      - PORT=8080
    ports:
      - "3001:8080"
      # - "3001:8080"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "110MB"

  api02:
    <<: *api
    hostname: api02
    environment:
      - DB_HOSTNAME=db
      - PORT=8080
    ports:
      - "3002:8080"
      # - "3002:8080"

  nginx:
    image: nginx:latest
    # network_mode: "host"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "30MB"

  db:
    image: postgres:16.1
    hostname: db
    # restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
      - POSTGRES_MAX_CONNECTIONS=150
      # - POSTGRES_SHARED_BUFFERS=256MB # Ajuste conforme necessário
      # - POSTGRES_MAX_WAL_SIZE=1GB # Ajuste conforme necessário
      - POSTGRES_FSYNC=off
      - POSTGRES_SYNCHRONOUS_COMMIT=off
      - POSTGRES_CHECKPOINT_TIMEOUT=1d
      - POSTGRES_FULL_PAGE_WRITES=false
    ports:
      - "5433:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c 'max_connections=1500' -c 'fsync=off' -c 'synchronous_commit=off' -c 'checkpoint_timeout=1d' -c 'full_page_writes=false'
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "300MB"
# networks:
#   default:
#     driver: bridge
#     name: rinha-nginx-2024q1
